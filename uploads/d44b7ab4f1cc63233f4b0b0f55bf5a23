robot = require("robot")

function resupply()
    robot.select(1)
    robot.turnRight()
    local distance = 0
    while (not robot.detect()) do
        distance = distance + 1
        robot.forward()
    end
    for i = 1, 40, 1 do
        robot.suck()
    end
    robot.turnRight()
    robot.turnRight()
    for i = distance, 1, -1 do
        robot.forward()
    end
    robot.turnRight()
end

function fillFourDrives()
    local robot = require("robot")
    local currentSlot = 1
    for i = 1, 10, 1 do
        robot.select(currentSlot)
        robot.drop()
        currentSlot = currentSlot + 1
    end
    robot.up()
    for i = 1, 10, 1 do
        robot.select(currentSlot)
        robot.drop()
        currentSlot = currentSlot + 1
    end
    robot.turnRight()
    robot.forward()
    robot.turnLeft()
    for i = 1, 10, 1 do
        robot.select(currentSlot)
        robot.drop()
        currentSlot = currentSlot + 1
    end
    robot.down()
    for i = 1, 10, 1 do
        robot.select(currentSlot)
        robot.drop()
        currentSlot = currentSlot + 1
    end
    robot.turnLeft()
    robot.forward()
    robot.turnRight()
end

--resupply()

local steps = 1;

while (steps < 10) do
    robot.turnRight()
    robot.select(48)
    if robot.compare() then
        steps = 0
        robot.turnRight()
        robot.forward()
        robot.turnLeft()
        robot.forward()
        robot.turnLeft()
        fillFourDrives()
        robot.turnRight()
        robot.back()
        resupply()
        robot.forward()
        robot.forward()
        robot.forward()
        robot.turnLeft()
        fillFourDrives()
        robot.turnLeft()
        robot.forward()
        robot.forward()
        robot.forward()
        robot.turnRight()
        robot.turnRight()
        resupply()
        robot.turnLeft()
        robot.forward()
    else
        robot.turnLeft()
    end
    robot.forward()
    steps = steps + 1
end

robot.turnRight()
robot.turnRight()

while not robot.detect() do
    robot.forward()
end

--resupply()
--fillFourDrives()